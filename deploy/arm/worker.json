{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "filePrivateDnsZoneId": {
      "type": "string"
    },
    "subnetId": {
      "type": "string"
    }
  },
  "variables": {
    "aks": "aks",
    "k8sVersion": "1.17.9",
    "nodeCount": 2,
    "nodeResourceGroup": "[concat('sds-worker-', variables('suffix'))]",
    "nodeSize": "Standard_DS2_v2",
    "runsTransientStorageAccount": "[concat('runs', variables('suffix'))]",
    "privateEndpoint": "[concat(variables('runsTransientStorageAccount'), '-files')]",
    "suffix": "[toLower(take(uniqueString(resourceGroup().id), 6))]",
    "benchmarkIdentity": "benchmark",
    "candidateIdentity": "candidate",
    "workerIdentity": "worker",
    "dockerBridgeCidr": "172.18.0.1/16",
    "serviceCidr": "172.16.0.0/16",
    "dnsServiceIp": "172.16.0.10",
    "managedIdentityOperatorRoleId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'f1a07417-d97a-45cb-824c-7a7467783830')]",
    "storageAccountContributorRoleId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '17d1049b-9a84-46fb-8f53-869881c3d3ab')]",
    "virtualMachineContributorRoleId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '9980e02c-c2be-4d73-94e8-173b1dc7cf3c')]"
  },
  "resources": [
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2018-11-30",
      "location": "[resourceGroup().location]",
      "name": "[variables('workerIdentity')]",
      "properties": {
      },
      "resources": [
        {
          "dependsOn": [
            "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('workerIdentity'))]",
            "[resourceId('Microsoft.ContainerService/managedClusters', variables('aks'))]"
          ],
          "type": "providers/roleAssignments",
          "apiVersion": "2018-09-01-preview",
          "location": "[resourceGroup().location]",
          "name": "[concat('Microsoft.Authorization/', guid(concat(variables('aks'), variables('workerIdentity'), 'ManagedIdentityOperator')))]",
          "properties": {
            "principalId": "[reference(resourceId('Microsoft.ContainerService/managedClusters', variables('aks'))).identityProfile.kubeletidentity.objectId]",
            "roleDefinitionId": "[variables('managedIdentityOperatorRoleId')]"
          }
        }
      ]
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2018-11-30",
      "location": "[resourceGroup().location]",
      "name": "[variables('benchmarkIdentity')]",
      "properties": {
      },
      "resources": [
        {
          "dependsOn": [
            "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('benchmarkIdentity'))]",
            "[resourceId('Microsoft.ContainerService/managedClusters', variables('aks'))]"
          ],
          "type": "providers/roleAssignments",
          "apiVersion": "2018-09-01-preview",
          "location": "[resourceGroup().location]",
          "name": "[concat('Microsoft.Authorization/', guid(concat(variables('aks'), variables('benchmarkIdentity'), 'ManagedIdentityOperator')))]",
          "properties": {
            "principalId": "[reference(resourceId('Microsoft.ContainerService/managedClusters', variables('aks'))).identityProfile.kubeletidentity.objectId]",
            "roleDefinitionId": "[variables('managedIdentityOperatorRoleId')]"
          }
        }
      ]
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2018-11-30",
      "location": "[resourceGroup().location]",
      "name": "[variables('candidateIdentity')]",
      "properties": {
      },
      "resources": [
        {
          "dependsOn": [
            "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('candidateIdentity'))]",
            "[resourceId('Microsoft.ContainerService/managedClusters', variables('aks'))]"
          ],
          "type": "providers/roleAssignments",
          "apiVersion": "2018-09-01-preview",
          "location": "[resourceGroup().location]",
          "name": "[concat('Microsoft.Authorization/', guid(concat(variables('aks'), variables('candidateIdentity'), 'ManagedIdentityOperator')))]",
          "properties": {
            "principalId": "[reference(resourceId('Microsoft.ContainerService/managedClusters', variables('aks'))).identityProfile.kubeletidentity.objectId]",
            "roleDefinitionId": "[variables('managedIdentityOperatorRoleId')]"
          }
        }
      ]
    },
    {
      "type": "Microsoft.ContainerService/managedClusters",
      "apiVersion": "2020-06-01",
      "location": "[resourceGroup().location]",
      "name": "[variables('aks')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "kubernetesVersion": "[variables('k8sVersion')]",
        "dnsPrefix": "[variables('aks')]",
        "nodeResourceGroup": "[variables('nodeResourceGroup')]",
        "agentPoolProfiles": [
          {
            "name": "default",
            "count": "[variables('nodeCount')]",
            "enableNodePublicIP": false,
            "mode": "System",
            "osType": "Linux",
            "storageProfile": "ManagedDisks",
            "type": "VirtualMachineScaleSets",
            "vmSize": "[variables('nodeSize')]",
            "vnetSubnetID": "[parameters('subnetId')]"
          }
        ],
        "networkProfile": {
          "loadBalancerSku": "standard",
          "networkPlugin": "azure",
          "networkPolicy": "azure",
          "serviceCidr": "[variables('serviceCidr')]",
          "dnsServiceIP": "[variables('dnsServiceIp')]",
          "dockerBridgeCidr": "[variables('dockerBridgeCidr')]",
          "outboundType": "userDefinedRouting"
        },
        "aadProfile": {
          "managed": true
        },
        "apiServerAccessProfile": {
          "enablePrivateCluster": true
        },
        "servicePrincipalProfile": {
          "clientId": "msi"
        },
        "enableRBAC": true,
        "addonProfiles": {
          "kubeDashboard": {
            "enabled": false
          }
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "location": "[resourceGroup().location]",
      "name": "[variables('runsTransientStorageAccount')]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS"
      },
      "properties": {
        "accessTier": "Hot",
        "networkAcls": {
          "bypass": "None",
          "defaultAction": "Deny",
          "virtualNetworkRules": []
        },
        "supportsHttpsTrafficOnly": true
      },
      "resources": [
        {
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', variables('runsTransientStorageAccount'))]",
            "[resourceId('Microsoft.ContainerService/managedClusters', variables('aks'))]"
          ],
          "type": "providers/roleAssignments",
          "apiVersion": "2018-09-01-preview",
          "location": "[resourceGroup().location]",
          "name": "[concat('Microsoft.Authorization/', guid(concat(variables('aks'), variables('runsTransientStorageAccount'), 'StorageAccountContributor')))]",
          "properties": {
            "principalId": "[reference(resourceId('Microsoft.ContainerService/managedClusters', variables('aks'))).identityProfile.kubeletidentity.objectId]",
            "roleDefinitionId": "[variables('storageAccountContributorRoleId')]"
          }
        }
      ]
    },
    {
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('runsTransientStorageAccount'))]"
      ],
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2020-05-01",
      "location": "[resourceGroup().location]",
      "name": "[variables('privateEndpoint')]",
      "properties": {
        "privateLinkServiceConnections": [
          {
            "name": "[variables('privateEndpoint')]",
            "properties": {
              "groupIds": [
                "file"
              ],
              "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('runsTransientStorageAccount'))]"
            }
          }
        ],
        "subnet": {
          "id": "[parameters('subnetId')]"
        }
      },
      "resources": [
        {
          "dependsOn": [
            "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEndpoint'))]"
          ],
          "type": "privateDnsZoneGroups",
          "apiVersion": "2020-05-01",
          "location": "[resourceGroup().location]",
          "name": "default",
          "properties": {
            "privateDnsZoneConfigs": [
              {
                "name": "default",
                "properties": {
                  "privateDnsZoneId": "[parameters('filePrivateDnsZoneId')]"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "dependsOn": [
        "[resourceId('Microsoft.ContainerService/managedClusters', variables('aks'))]"
      ],
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "aks-rbac",
      "resourceGroup": "[variables('nodeResourceGroup')]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2018-09-01-preview",
              "location": "[resourceGroup().location]",
              "name": "[guid(concat(variables('aks'), 'VirtualMachineContributor'))]",
              "properties": {
                "principalId": "[reference(resourceId('Microsoft.ContainerService/managedClusters', variables('aks'))).identityProfile.kubeletidentity.objectId]",
                "roleDefinitionId": "[variables('virtualMachineContributorRoleId')]"
              }
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "kubeletIdentityId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ContainerService/managedClusters', variables('aks'))).identityProfile.kubeletidentity.objectId]"
    },
    "workerIdentityId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('workerIdentity'))).principalId]"
    },
    "workerIdentityResourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('workerIdentity'))]"
    },
    "workerIdentityClientId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('workerIdentity'))).clientId]"
    },
    "benchmarkIdentityResourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('benchmarkIdentity'))]"
    },
    "benchmarkIdentityClientId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('benchmarkIdentity'))).clientId]"
    },
    "candidateIdentityResourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('candidateIdentity'))]"
    },
    "candidateIdentityClientId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('candidateIdentity'))).clientId]"
    },
    "runsTransientStorageAccount": {
      "type": "string",
      "value": "[variables('runsTransientStorageAccount')]"
    }
  }
}
