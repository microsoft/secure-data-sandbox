{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "assetsBaseUrl": {
      "type": "string",
      "defaultValue": ""
    },
    "createVnet": {
      "type": "bool",
      "defaultValue": true
    },
    "deploymentSas": {
      "type": "securestring",
      "defaultValue": ""
    }
  },
  "variables": {
    "assetsBaseUrl": "[if(empty(parameters('assetsBaseUrl')), if(contains(deployment().properties, 'templateLink'), uri(deployment().properties.templateLink.uri, '../'), 'https://raw.githubusercontent.com/microsoft/secure-data-sandbox/main/deploy/'), parameters('assetsBaseUrl'))]",
    "deploymentSas": "[if(empty(parameters('deploymentSas')), '', concat('?', parameters('deploymentSas')))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "name": "network",
      "resourceGroup": "[resourceGroup().name]",
      "properties": {
        "mode": "Incremental",
        "parameters": {
          "createVnet": {
            "value": "[parameters('createVnet')]"
          }
        },
        "templateLink": {
          "uri": "[concat(uri(variables('assetsBaseUrl'), './arm/network.json'), variables('deploymentSas'))]"
        }
      }
    },
    {
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'network')]"
      ],
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "name": "queue",
      "resourceGroup": "[resourceGroup().name]",
      "properties": {
        "mode": "Incremental",
        "parameters": {
          "queuePrivateDnsZoneId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network')).outputs.queuePrivateDnsZoneId.value]"
          },
          "subnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network')).outputs.privateLinkSubnetId.value]"
          }
        },
        "templateLink": {
          "uri": "[concat(uri(variables('assetsBaseUrl'), './arm/queue.json'), variables('deploymentSas'))]"
        }
      }
    },
    {
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'network')]"
      ],
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "name": "acr",
      "resourceGroup": "[resourceGroup().name]",
      "properties": {
        "mode": "Incremental",
        "parameters": {
          "acrPrivateDnsZoneId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network')).outputs.acrPrivateDnsZoneId.value]"
          },
          "subnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network')).outputs.privateLinkSubnetId.value]"
          }
        },
        "templateLink": {
          "uri": "[concat(uri(variables('assetsBaseUrl'), './arm/acr.json'), variables('deploymentSas'))]"
        }
      }
    },
    {
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'queue')]"
      ],
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "name": "laboratory",
      "resourceGroup": "[resourceGroup().name]",
      "properties": {
        "mode": "Incremental",
        "parameters": {
          "queueEndpoint": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'queue')).outputs.runsEndpoint.value]"
          }
        },
        "templateLink": {
          "uri": "[concat(uri(variables('assetsBaseUrl'), './arm/laboratory.json'), variables('deploymentSas'))]"
        }
      }
    },
    {
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'network')]"
      ],
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "name": "worker",
      "resourceGroup": "[resourceGroup().name]",
      "properties": {
        "mode": "Incremental",
        "parameters": {
          "filePrivateDnsZoneId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network')).outputs.filePrivateDnsZoneId.value]"
          },
          "subnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network')).outputs.detonationChamberSubnetId.value]"
          }
        },
        "templateLink": {
          "uri": "[concat(uri(variables('assetsBaseUrl'), './arm/worker.json'), variables('deploymentSas'))]"
        }
      }
    },
    {
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'acr')]",
        "[resourceId('Microsoft.Resources/deployments', 'worker')]"
      ],
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "name": "rbac",
      "resourceGroup": "[resourceGroup().name]",
      "properties": {
        "mode": "Incremental",
        "parameters": {
          "kubeletIdentityId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'worker')).outputs.kubeletIdentityId.value]"
          },
          "workerIdentityId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'worker')).outputs.workerIdentityId.value]"
          },
          "laboratoryIdentityId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'laboratory')).outputs.laboratoryIdentityId.value]"
          },
          "infraAcrId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'acr')).outputs.infraAcrId.value]"
          },
          "userAcrId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'acr')).outputs.userAcrId.value]"
          },
          "runsQueueId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'queue')).outputs.runsResourceId.value]"
          }
        },
        "templateLink": {
          "uri": "[concat(uri(variables('assetsBaseUrl'), './arm/rbac.json'), variables('deploymentSas'))]"
        }
      }
    }
  ],
  "outputs": {
    "assetsBaseUrl": {
      "type": "string",
      "value": "[variables('assetsBaseUrl')]"
    }
  }
}
