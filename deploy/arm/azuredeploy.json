{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "assetsBaseUrl": {
      "type": "string",
      "defaultValue": ""
    },
    "deploymentSas": {
      "type": "securestring",
      "defaultValue": ""
    },
    "mode": {
      "type": "string",
      "defaultValue": "production",
      "allowedValues": [
        "development",
        "production"
      ]
    },
    "allowedExternalEndpoints": {
      "type": "array",
      "defaultValue": []
    },
    "tags": {
      "type": "object",
      "defaultValue": {}
    },
    "authMode": {
      "type": "string",
      "defaultValue": "none"
    },
    "authTenantId": {
      "type": "string",
      "defaultValue": "[subscription().tenantId]"
    },
    "authLaboratoryClientId": {
      "type": "string",
      "defaultValue": ""
    },
    "authCliClientId": {
      "type": "string",
      "defaultValue": ""
    },
    "authAllowedClientIds": {
      "type": "string",
      "defaultValue": ""
    }
  },
  "variables": {
    "assetsBaseUrl": "[if(empty(parameters('assetsBaseUrl')), if(contains(deployment().properties, 'templateLink'), uri(deployment().properties.templateLink.uri, '../'), 'https://raw.githubusercontent.com/microsoft/secure-data-sandbox/main/deploy/'), parameters('assetsBaseUrl'))]",
    "deploymentSas": "[if(empty(parameters('deploymentSas')), '', concat('?', parameters('deploymentSas')))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "monitoring",
      "resourceGroup": "[resourceGroup().name]",
      "tags": "[parameters('tags')]",
      "properties": {
        "mode": "Incremental",
        "parameters": {
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "templateLink": {
          "uri": "[concat(uri(variables('assetsBaseUrl'), './arm/monitoring.json'), variables('deploymentSas'))]"
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "keyvault",
      "resourceGroup": "[resourceGroup().name]",
      "tags": "[parameters('tags')]",
      "properties": {
        "mode": "Incremental",
        "parameters": {
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "templateLink": {
          "uri": "[concat(uri(variables('assetsBaseUrl'), './arm/keyvault.json'), variables('deploymentSas'))]"
        }
      }
    },
    {
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'monitoring')]"
      ],
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "network",
      "resourceGroup": "[resourceGroup().name]",
      "tags": "[parameters('tags')]",
      "properties": {
        "mode": "Incremental",
        "parameters": {
          "tags": {
            "value": "[parameters('tags')]"
          },
          "monitoringEventHub": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'monitoring')).outputs.eventHub.value]"
          },
          "monitoringEventHubsNamespace": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'monitoring')).outputs.eventHubsNamespace.value]"
          }
        },
        "templateLink": {
          "uri": "[concat(uri(variables('assetsBaseUrl'), './arm/network.json'), variables('deploymentSas'))]"
        }
      }
    },
    {
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'network')]"
      ],
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "queue",
      "resourceGroup": "[resourceGroup().name]",
      "tags": "[parameters('tags')]",
      "properties": {
        "mode": "Incremental",
        "parameters": {
          "queuePrivateDnsZoneId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network')).outputs.queuePrivateDnsZoneId.value]"
          },
          "subnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network')).outputs.privateLinkSubnetId.value]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "templateLink": {
          "uri": "[concat(uri(variables('assetsBaseUrl'), './arm/queue.json'), variables('deploymentSas'))]"
        }
      }
    },
    {
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'network')]"
      ],
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "acr",
      "resourceGroup": "[resourceGroup().name]",
      "tags": "[parameters('tags')]",
      "properties": {
        "mode": "Incremental",
        "parameters": {
          "acrPrivateDnsZoneId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network')).outputs.acrPrivateDnsZoneId.value]"
          },
          "subnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network')).outputs.privateLinkSubnetId.value]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "templateLink": {
          "uri": "[concat(uri(variables('assetsBaseUrl'), './arm/acr.json'), variables('deploymentSas'))]"
        }
      }
    },
    {
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'acr')]",
        "[resourceId('Microsoft.Resources/deployments', 'keyvault')]",
        "[resourceId('Microsoft.Resources/deployments', 'monitoring')]",
        "[resourceId('Microsoft.Resources/deployments', 'queue')]"
      ],
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "laboratory",
      "resourceGroup": "[resourceGroup().name]",
      "tags": "[parameters('tags')]",
      "properties": {
        "mode": "Incremental",
        "parameters": {
          "instrumentationKey": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'monitoring')).outputs.instrumentationKey.value]"
          },
          "infraAcrId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'acr')).outputs.infraAcrId.value]"
          },
          "infraAcrLoginServer": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'acr')).outputs.infraAcrLoginServer.value]"
          },
          "laboratoryImage": {
            "value": "[concat(reference(resourceId('Microsoft.Resources/deployments', 'acr')).outputs.infraAcrLoginServer.value, '/sds-laboratory')]"
          },
          "runsQueueEndpoint": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'queue')).outputs.runsQueueEndpoint.value]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "keyVault": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyvault')).outputs.keyVault.value]"
          },
          "monitoringStorageAccount": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'monitoring')).outputs.storageAccount.value]"
          },
          "monitoringEventHub": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'monitoring')).outputs.eventHub.value]"
          },
          "monitoringEventHubsNamespace": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'monitoring')).outputs.eventHubsNamespace.value]"
          },
          "authMode": {
            "value": "[parameters('authMode')]"
          },
          "authTenantId": {
            "value": "[parameters('authTenantId')]"
          },
          "authLaboratoryClientId": {
            "value": "[parameters('authLaboratoryClientId')]"
          },
          "authCliClientId": {
            "value": "[parameters('authCliClientId')]"
          },
          "authAllowedClientIds": {
            "value": "[parameters('authAllowedClientIds')]"
          }
        },
        "templateLink": {
          "uri": "[concat(uri(variables('assetsBaseUrl'), './arm/laboratory.json'), variables('deploymentSas'))]"
        }
      }
    },
    {
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'network')]",
        "[resourceId('Microsoft.Resources/deployments', 'laboratory')]"
      ],
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "firewall",
      "resourceGroup": "[resourceGroup().name]",
      "tags": "[parameters('tags')]",
      "properties": {
        "mode": "Incremental",
        "parameters": {
          "mode": {
            "value": "[parameters('mode')]"
          },
          "allowedExternalEndpoints": {
            "value": "[parameters('allowedExternalEndpoints')]"
          },
          "subnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network')).outputs.firewallSubnetId.value]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "routeTable": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network')).outputs.routeTable.value]"
          },
          "laboratoryEndpoint": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'laboratory')).outputs.laboratoryEndpoint.value]"
          }
        },
        "templateLink": {
          "uri": "[concat(uri(variables('assetsBaseUrl'), './arm/firewall.json'), variables('deploymentSas'))]"
        }
      }
    },
    {
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'network')]",
        "[resourceId('Microsoft.Resources/deployments', 'monitoring')]",
        "[resourceId('Microsoft.Resources/deployments', 'firewall')]"
      ],
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "worker",
      "resourceGroup": "[resourceGroup().name]",
      "tags": "[parameters('tags')]",
      "properties": {
        "mode": "Incremental",
        "parameters": {
          "filePrivateDnsZoneId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network')).outputs.filePrivateDnsZoneId.value]"
          },
          "subnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network')).outputs.detonationChamberSubnetId.value]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "logAnalyticsWorkspace": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'monitoring')).outputs.logAnalyticsWorkspace.value]"
          }
        },
        "templateLink": {
          "uri": "[concat(uri(variables('assetsBaseUrl'), './arm/worker.json'), variables('deploymentSas'))]"
        }
      }
    },
    {
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'acr')]",
        "[resourceId('Microsoft.Resources/deployments', 'worker')]"
      ],
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "rbac",
      "resourceGroup": "[resourceGroup().name]",
      "tags": "[parameters('tags')]",
      "properties": {
        "mode": "Incremental",
        "parameters": {
          "nodeResourceGroup": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'worker')).outputs.nodeResourceGroup.value]"
          },
          "kubeletIdentityId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'worker')).outputs.kubeletIdentityId.value]"
          },
          "workerIdentityId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'worker')).outputs.workerIdentityId.value]"
          },
          "laboratoryIdentityId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'laboratory')).outputs.laboratoryIdentityId.value]"
          },
          "infraAcrId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'acr')).outputs.infraAcrId.value]"
          },
          "userAcrId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'acr')).outputs.userAcrId.value]"
          },
          "runsQueueId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'queue')).outputs.runsResourceId.value]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "templateLink": {
          "uri": "[concat(uri(variables('assetsBaseUrl'), './arm/rbac.json'), variables('deploymentSas'))]"
        }
      }
    }
  ],
  "outputs": {
    "infraAcrLoginServer": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'acr')).outputs.infraAcrLoginServer.value]"
    },
    "userAcrLoginServer": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'acr')).outputs.userAcrLoginServer.value]"
    },
    "instrumentationKey": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'monitoring')).outputs.instrumentationKey.value]"
    },
    "runsQueueEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'queue')).outputs.runsQueueEndpoint.value]"
    },
    "runsTransientStorageAccount": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'worker')).outputs.runsTransientStorageAccount.value]"
    },
    "workerIdentityResourceId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'worker')).outputs.workerIdentityResourceId.value]"
    },
    "workerIdentityClientId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'worker')).outputs.workerIdentityClientId.value]"
    },
    "benchmarkIdentityResourceId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'worker')).outputs.benchmarkIdentityResourceId.value]"
    },
    "benchmarkIdentityClientId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'worker')).outputs.benchmarkIdentityClientId.value]"
    },
    "candidateIdentityResourceId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'worker')).outputs.candidateIdentityResourceId.value]"
    },
    "candidateIdentityClientId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'worker')).outputs.candidateIdentityClientId.value]"
    }
  }
}
