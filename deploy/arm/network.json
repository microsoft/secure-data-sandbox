{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "tags": {
      "type": "object",
      "defaultValue": {}
    }
  },
  "variables": {
    "defaultTags": {
      "vnetExists": false
    },
    "updatedTags": {
      "vnetExists": true
    },
    "existingTags": "[if(contains(resourceGroup(), 'tags'), resourceGroup().tags, json('{}'))]",
    "vnetExists": "[bool(union(variables('defaultTags'), variables('existingTags'))['vnetExists'])]",
    "vnetAddressPrefix": "10.0.0.0/16",
    "privateLinkSubnetPrefix": "10.0.0.0/24",
    "firewallSubnetPrefix": "10.0.1.0/26",
    "forceTunnel": "firewall",
    "detonationChamberSubnetPrefix": "10.0.3.0/24",
    "detonationChamber": "detonationChamber",
    "privateDnsZones": [
      "privatelink.file.core.windows.net",
      "privatelink.queue.core.windows.net",
      "privatelink.azurecr.io"
    ],
    "privateLink": "privateLink",
    "vnet": "vnet"
  },
  "resources": [
    {
      "condition": "[not(variables('vnetExists'))]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-05-01",
      "location": "[resourceGroup().location]",
      "name": "[variables('vnet')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnetAddressPrefix')]"
          ]
        }
      }
    },
    {
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet'))]"
      ],
      "type": "Microsoft.Resources/tags",
      "apiVersion": "2019-10-01",
      "name": "default",
      "properties": {
        "tags": "[union(variables('existingTags'), variables('updatedTags'))]"
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-05-01",
      "location": "[resourceGroup().location]",
      "name": "[variables('privateLink')]",
      "properties": {
        "securityRules": [
          {
            "name": "all-inbound-deny",
            "properties": {
              "priority": 4096,
              "direction": "Inbound",
              "access": "Deny",
              "protocol": "*",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "*"
            }
          },
          {
            "name": "detonationChamber-inbound-allow",
            "properties": {
              "priority": 1000,
              "direction": "Inbound",
              "access": "Allow",
              "protocol": "TCP",
              "sourceAddressPrefix": "[variables('detonationChamberSubnetPrefix')]",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "[variables('privateLinkSubnetPrefix')]",
              "destinationPortRange": "443"
            }
          },
          {
            "name": "all-outbound-deny",
            "properties": {
              "priority": 4096,
              "direction": "Outbound",
              "access": "Deny",
              "protocol": "*",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "*"
            }
          }
        ]
      }
    },
    {
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('privateLink'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet'))]"
      ],
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2020-05-01",
      "location": "[resourceGroup().location]",
      "name": "[concat(variables('vnet'), '/', variables('privateLink'))]",
      "properties": {
        "addressPrefix": "[variables('privateLinkSubnetPrefix')]",
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('privateLink'))]"
        },
        "privateEndpointNetworkPolicies": "Disabled"
      }
    },
    {
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet'), variables('privateLink'))]"
      ],
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2020-05-01",
      "location": "[resourceGroup().location]",
      "name": "[concat(variables('vnet'), '/AzureFirewallSubnet')]",
      "properties": {
        "addressPrefix": "[variables('firewallSubnetPrefix')]"
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-05-01",
      "location": "[resourceGroup().location]",
      "name": "[variables('detonationChamber')]",
      "properties": {
        "securityRules": [
          {
            "name": "intra-subnet-inbound-allow",
            "properties": {
              "description": "Allow k8s apiserver->node communication",
              "priority": 1000,
              "direction": "Inbound",
              "access": "Allow",
              "protocol": "*",
              "sourceAddressPrefix": "[variables('detonationChamberSubnetPrefix')]",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "[variables('detonationChamberSubnetPrefix')]",
              "destinationPortRange": "*"
            }
          },
          {
            "name": "all-inbound-deny",
            "properties": {
              "priority": 4096,
              "direction": "Inbound",
              "access": "Deny",
              "protocol": "*",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "*"
            }
          },
          {
            "name": "intra-subnet-outbound-allow",
            "properties": {
              "description": "Allow k8s apiserver->node communication",
              "priority": 1000,
              "direction": "Outbound",
              "access": "Allow",
              "protocol": "TCP",
              "sourceAddressPrefix": "[variables('detonationChamberSubnetPrefix')]",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "[variables('detonationChamberSubnetPrefix')]",
              "destinationPortRange": "*"
            }
          },
          {
            "name": "private-endpoints-outbound-allow",
            "properties": {
              "priority": 1100,
              "direction": "Outbound",
              "access": "Allow",
              "protocol": "TCP",
              "sourceAddressPrefix": "[variables('detonationChamberSubnetPrefix')]",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "[variables('privateLinkSubnetPrefix')]",
              "destinationPortRange": "443"
            }
          },
          {
            "name": "firewall-outbound-allow",
            "properties": {
              "priority": 1200,
              "direction": "Outbound",
              "access": "Allow",
              "protocol": "TCP",
              "sourceAddressPrefix": "[variables('detonationChamberSubnetPrefix')]",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "[variables('firewallSubnetPrefix')]",
              "destinationPortRange": "*"
            }
          },
          {
            "name": "internet-via-firewall-allow",
            "properties": {
              "priority": 1300,
              "direction": "Outbound",
              "access": "Allow",
              "protocol": "TCP",
              "sourceAddressPrefix": "[variables('detonationChamberSubnetPrefix')]",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "Internet",
              "destinationPortRange": "*"
            }
          },
          {
            "name": "dns-outbound-allow",
            "properties": {
              "priority": 1400,
              "direction": "Outbound",
              "access": "Allow",
              "protocol": "UDP",
              "sourceAddressPrefix": "[variables('detonationChamberSubnetPrefix')]",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "VirtualNetwork",
              "destinationPortRange": "53"
            }
          },
          {
            "name": "all-outbound-deny",
            "properties": {
              "priority": 4096,
              "direction": "Outbound",
              "access": "Deny",
              "protocol": "*",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "*"
            }
          }
        ]
      }
    },
    {
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('detonationChamber'))]",
        "[resourceId('Microsoft.Network/routeTables', variables('forceTunnel'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet'), 'AzureFirewallSubnet')]"
      ],
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2020-05-01",
      "location": "[resourceGroup().location]",
      "name": "[concat(variables('vnet'), '/', variables('detonationChamber'))]",
      "properties": {
        "addressPrefix": "[variables('detonationChamberSubnetPrefix')]",
        "privateEndpointNetworkPolicies": "Disabled",
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('detonationChamber'))]"

        },
        "routeTable": {
          "id": "[resourceId('Microsoft.Network/routeTables', variables('forceTunnel'))]"
        }
      }
    },
    {
      "condition": "[not(variables('vnetExists'))]",
      "type": "Microsoft.Network/routeTables",
      "apiVersion": "2020-05-01",
      "location": "[resourceGroup().location]",
      "name": "[variables('forceTunnel')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "disableBgpRoutePropagation": false
      }
    },
    {
      "copy": {
        "name": "privateDnsZones",
        "count": "[length(variables('privateDnsZones'))]"
      },
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2018-09-01",
      "location": "global",
      "name": "[variables('privateDnsZones')[copyIndex()]]",
      "tags": "[parameters('tags')]",
      "properties": {
      },
      "resources": [
        {
          "dependsOn": [
            "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZones')[copyIndex()])]"
          ],
          "type": "SOA",
          "apiVersion": "2018-09-01",
          "name": "@",
          "properties": {
            "ttl": 3600,
            "soaRecord": {
              "email": "azureprivatedns-host.microsoft.com",
              "expireTime": 2419200,
              "host": "azureprivatedns.net",
              "refreshTime": 3600,
              "retryTime": 300,
              "serialNumber": 1,
              "minimumTtl": 300
            }
          }
        },
        {
          "dependsOn": [
            "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZones')[copyIndex()])]"
          ],
          "type": "virtualNetworkLinks",
          "apiVersion": "2018-09-01",
          "location": "global",
          "name": "privatedns",
          "properties": {
            "registrationEnabled": false,
            "virtualNetwork": {
              "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet'))]",
              "resourceGroup": "[resourceGroup().name]"
            }
          }
        }
      ]
    }
  ],
  "outputs": {
    "acrPrivateDnsZoneId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.azurecr.io')]"
    },
    "detonationChamberSubnetId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet'), variables('detonationChamber'))]"
    },
    "filePrivateDnsZoneId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.file.core.windows.net')]"
    },
    "firewallSubnetId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet'), 'AzureFirewallSubnet')]"
    },
    "privateLinkSubnetId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet'), variables('privateLink'))]"
    },
    "queuePrivateDnsZoneId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.queue.core.windows.net')]"
    },
    "vnetId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet'))]"
    },
    "routeTable": {
      "type": "string",
      "value": "[variables('forceTunnel')]"
    }
  }
}
